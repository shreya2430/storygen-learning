steps:
  # Install dependencies
  - name: 'python'
    entrypoint: 'pip'
    args: ['install', '-r', 'requirements.txt', '--user']
    id: 'Install Dependencies'

  # Run tests (placeholder)
  - name: 'python'
    entrypoint: 'python'
    args: ['-m', 'pytest']
    id: 'Test'
    waitFor:
      - 'Install Dependencies'

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}', '.']
    id: 'Build'
    waitFor:
      - 'Test'

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}']
    id: 'Push'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--quiet'
      - '--set-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest' # Example secret
    id: 'Deploy'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'

substitutions:
  _SERVICE_NAME: 'storygen-backend'
  _REGION: 'us-central1'
